; This extremely simple example shows some of the most essential
; features of SHOP2.

(defdomain basic (
	
	; ---------------------------------------SELECT DRIVER------------------------------------------------------------------
	
	(:operator 	(!choose-driver ?current-location) ; head
				((TRUCK-LICENSE ?staff ?hours) (STAFF-AT ?staff ?current-location) (call >= ?hours 1) (forall (?staff2 ?hours2) ((STAFF-AT ?staff2 ?current-location)(TRUCK-LICENSE ?staff2 ?hours2)) ((call >= ?hours ?hours2)))) ; precond
				() ; delete
				((CHOSEN-DRIVER ?staff)) ; add
	)
	
	; ---------------------------------------SELECT TRUCK-------------------------------------------------------------------
	
	(:operator 	(!choose-truck ?current-location) ; head
				((TRUCK ?truck ?mileage) (TRUCK-AT ?truck ?current-location) (forall (?truck2 ?mileage2) ((TRUCK ?truck2 ?mileage2) (TRUCK-AT ?truck2 ?current-location)) ((call <= ?mileage ?mileage2)))) ; precond
				() ; delete
				((chosen-truck ?truck)) ; add
	)
	
	; ---------------------------------------DELIVERY-----------------------------------------------------------------------
	
	(:method (deliver-to ?parcel ?current-location ?location) ; head
		; precond
		(
		(CHOSEN-DRIVER ?staff)
		(CHOSEN-TRUCK ?truck)
		)
		
		; subtasks
		(
		(preDrive-checkup ?truck ?staff)
		(!load-parcel ?parcel ?truck ?staff)
		(!secure-parcels ?truck ?staff)
		(drive ?current-location ?location)
		(!unload-parcel ?parcel ?truck ?staff)
		(preDrive-checkup ?truck ?staff)
		(drive ?location ?current-location)
		)
	)
	
	; ------------precheck------------
	(:method (preDrive-checkup ?truck ?staff) ; head
		; precond
		()
		
		; subtasks
		((!refuel ?truck ?staff)
		(!techcheck ?truck ?staff)
		)
	)
	
	(:operator 	(!refuel ?truck ?staff) ; head
				() ; precond
				() ; delete
				((TRUCK-FUELED ?truck)) ; add
	)
	
	(:operator 	(!techcheck ?truck ?staff) ; head
				() ; precond
				() ; delete
				((TRUCK-TECHCHECKED ?truck)) ; add
	)
	
	; ------------un/load-------------
	(:operator 	(!load-parcel ?parcel ?truck ?staff) ; head
				() ; precond
				((PARCEL-CURRENT-AT ?parcel ?location)) ; delete
				((PARCEL-LOADED ?parcel ?truck)) ; add
	)
	
	(:operator 	(!unload-parcel ?parcel ?truck ?staff) ; head
				((PARCEL-SECURE ?parcel ?truck)) ; precond
				((PARCEL-SECURE ?parcel ?truck) (PARCEL-LOADED ?parcel ?truck)) ; delete
				((PARCEL-AT ?parcel ?truck-location)) ; add
	)
	
	; ------------secure--------------
	(:operator 	(!secure-parcels ?truck ?staff) ; head
				() ; precond
				() ; delete
				((forall (?parcel) ((PARCEL-LOADED ?parcel ?truck)) ((PARCEL-SECURE ?parcel ?truck)))) ; add
	)
	
	; ------------drive---------------
	(:method (drive ?from ?to) ; head
	 ; CASE 1
		; precond
		((TRUCK-TECHCHECKED ?truck) (TRUCK-FUELED ?truck) (CHOSEN-DRIVER ?driver) (CHOSEN-TRUCK ?truck)
		(IN-CITY ?from ?city1) (IN-CITY ?to ?city2) (DISTANCE ?city1 ?city2 ?distance))
		
		; subtasks
		((!drive ?truck ?from ?to ?driver)
		(!increase-mileage ?truck ?distance)
		(!subtract-time ?driver)
		)
		
	 ; CASE 2
		; precond
		((TRUCK-TECHCHECKED ?truck) (TRUCK-FUELED ?truck) (CHOSEN-DRIVER ?driver) (CHOSEN-TRUCK ?truck)
		(IN-CITY ?from ?city1) (IN-CITY ?to ?city2) (DISTANCE ?city2 ?city1 ?distance))
		
		; subtasks
		((!drive ?truck ?from ?to ?driver)
		(!increase-mileage ?truck ?distance)
		(!subtract-time ?driver)
		)
	)
	
	(:operator 	(!drive ?truck ?from ?to ?staff) ; head
				() ; precond
				((TRUCK-AT ?truck ?from) (TRUCK-TECHCHECKED ?truck) (TRUCK-FUELED ?truck) (STAFF-AT ?staff ?from) (TRUCK-CLEANED ?truck) (TIREPRESSURE-OK ?truck)) ; delete
				((TRUCK-AT ?truck ?to) (STAFF-AT ?staff ?to)) ; add
	)
	
	(:operator 	(!increase-mileage ?truck ?distance) ; head
				((TRUCK ?truck ?mileage)) ; precond
				((TRUCK ?truck ?mileage)) ; delete
				((TRUCK ?truck (call + ?mileage ?distance))) ; add
	)
	
	(:operator 	(!subtract-time ?staff) ; head
				((TRUCK-LICENSE ?staff ?hours)) ; precond
				((TRUCK-LICENSE ?staff ?hours)) ; delete
				((TRUCK-LICENSE ?staff (call - ?hours 0.5))) ; add
	)
	
	; ---------------------------------------INSPECTION-----------------------------------------------------------------------
	
	(:method (inspection-needed?) ; head
	  ; Case 1 - mileage over 15k
		; precond 1
		((TRUCK-AT ?truck ?location) (KFZ-MECHANIC ?staff null) (STAFF-AT ?staff ?location) (TRUCK ?truck ?mileage) (not (FIRST-DONE ?truck)) (CHOSEN-TRUCK ?truck)
		(call >= ?mileage 15000)
		)
		
		; subtasks 1
		((!first-inspection ?truck))
		
	  ; Case 2 - mileage over 30k
		; precond 2
		((TRUCK-AT ?truck ?location) (KFZ-MECHANIC ?staff null) (STAFF-AT ?staff ?location) (TRUCK ?truck ?mileage) (not (second-DONE ?truck)) (CHOSEN-TRUCK ?truck)
		(call >= ?mileage 30000)
		)
		
		; subtasks 2
		((!second-inspection ?truck))
			
	  ; Case 3 - empty base case (do nothing)
		()
		()
	)
	
	(:operator 	(!first-inspection ?truck) ; head
				() ; precond
				() ; delete
				((FIRST-DONE ?truck)) ; add
	)
	
	(:operator 	(!second-inspection ?truck) ; head
				((FIRST-DONE ?truck)) ; precond
				() ; delete
				((SECOND-DONE ?truck)) ; add
	)
	
	; ---------------------------------------AFTER DELIVERY CHECK-----------------------------------------------------------
	
	(:method (afterDelivery-checkup) ; head
		; precond
		((CHOSEN-DRIVER ?staff) (CHOSEN-TRUCK ?truck))
		
		; subtasks
		((!refuel ?truck ?staff) ; located in DELIVERY > precheck
		(!cleanup ?truck ?staff)
		(!tirePressure-check ?truck ?staff)
		(!unselect-chosen ?staff ?truck)
		)
	)
	
	(:operator 	(!cleanup ?truck ?staff) ; head
				() ; precond
				() ; delete
				((TRUCK-CLEANED ?truck)) ; add
	)
	
	(:operator 	(!tirePressure-check ?truck ?staff) ; head
				() ; precond
				() ; delete
				((TIREPRESSURE-OK ?truck)) ; add
	)
	
	(:operator 	(!unselect-chosen ?staff ?truck) ; head
				() ; precond
				((CHOSEN-DRIVER ?staff) (CHOSEN-TRUCK ?truck)) ; delete
				() ; add
	)
	
	; ---------------------------------------MAIN METHOD--------------------------------------------------------------------
	
	(:method (PARCEL-AT ?parcel ?location) ; head
		; precond
		(
		(PARCEL-CURRENT-AT ?parcel ?current-location)
		(not (same ?location ?current-location))
		)
		
		; subtasks
		(
		(!choose-driver ?current-location)
		(!choose-truck ?current-location)
		
		(deliver-to ?parcel ?current-location ?location)
		(inspection-needed?)
		(afterDelivery-checkup)
		)
	)
	
	
	(:- (same ?x ?x) nil)
 )
)